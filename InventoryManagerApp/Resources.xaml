<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:InventoryManagerApp"
                    xmlns:conv="clr-namespace:InventoryManagerApp.Converters"
                    xmlns:vm="clr-namespace:InventoryManagerApp.ViewModels"
                    xmlns:v="clr-namespace:InventoryManagerApp.Views">

    <conv:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <conv:EnumMatchToBooleanConverter x:Key="EnumToBoolConverter"/>
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <SolidColorBrush x:Key="TitleBarBrush" Color="#FF0078D7"/>
    <SolidColorBrush x:Key="TitleBarHighlightBrush" Color="#FF498BCF"/>
    <SolidColorBrush x:Key="ApplicationBrush" Color="#FF5A9FE4"/>
    <SolidColorBrush x:Key="HighlightBrush" Color="#FF76ADE4"/>
    <SolidColorBrush x:Key="AccentBrush" Color="#FFE2E8F3"/>

    <DataTemplate DataType="{x:Type vm:SearchViewModel}">
        <v:SearchView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:SaveViewModel}">
        <v:SaveView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ResultViewModel}">
        <v:ResultView/>
    </DataTemplate>

    <!--Storyboards-->
    <Storyboard x:Key="ShowSearchDatesStoryboard">
        <DoubleAnimation Storyboard.TargetProperty="Height" From="0" To="100" Duration="0:0:0.15" AutoReverse="False"/>
    </Storyboard>

    <Storyboard x:Key="HideSearchDatesStoryboard">
        <DoubleAnimation Storyboard.TargetProperty="Height" From="100" To="0" Duration="0:0:0.15" AutoReverse="False"/>
    </Storyboard>

    <Storyboard x:Key="ShowOptionPanelScrolltoryboard">
        <DoubleAnimation Storyboard.TargetProperty="Width" From="0" To="200" Duration="0:0:0.15" AutoReverse="False"/>
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:0.15" Storyboard.TargetName="{x:Null}"/>

    </Storyboard>

    <Storyboard x:Key="HideOptionPanelScrolltoryboard">
        <DoubleAnimation Storyboard.TargetProperty="Width" From="200" To="0" Duration="0:0:0.15" AutoReverse="False"/>
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="0:0:0.15" Storyboard.TargetName="{x:Null}"/>
    </Storyboard>

    <Storyboard x:Key="FadeIn">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:0.3" Storyboard.TargetName="{x:Null}"/>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="{x:Null}">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="FadeOut">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="0:0:0.3" Storyboard.TargetName="{x:Null}"/>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="{x:Null}">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
            <DiscreteObjectKeyFrame KeyTime="0:0:0.35" Value="{x:Static Visibility.Collapsed}"/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <!--DataGrid-->
    <Style x:Key="DataGridSummaryCellStyle" TargetType="DataGridCell">
        <Setter Property="Padding" Value="5,10,5,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridDetailsCellStyle" TargetType="DataGridCell">
        <Setter Property="Padding" Value="5,5,10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Button Styles-->
    <Style x:Key="TitleBarButtonMouseOverSyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource TitleBarBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource TitleBarHighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NormalButtonMouseOverSyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ApplicationBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>